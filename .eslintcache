[{"C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\App.js":"1","C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\components\\Comments\\Comments.jsx":"2","C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\components\\Home\\Song.jsx":"3","C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\index.js":"4","C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\components\\Home\\Home.jsx":"5","C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\reportWebVitals.js":"6","C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\reducers\\loadingReducer.js":"7","C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\components\\Home\\Gallery.jsx":"8","C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\store\\index.js":"9","C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\reducers\\songsReducer.js":"10"},{"size":1129,"mtime":1612517643558,"results":"11","hashOfConfig":"12"},{"size":6807,"mtime":1612517643563,"results":"13","hashOfConfig":"12"},{"size":409,"mtime":1612528908509,"results":"14","hashOfConfig":"12"},{"size":692,"mtime":1612519826703,"results":"15","hashOfConfig":"12"},{"size":5730,"mtime":1612527438754,"results":"16","hashOfConfig":"12"},{"size":375,"mtime":1612517643569,"results":"17","hashOfConfig":"12"},{"size":341,"mtime":1612518985383,"results":"18","hashOfConfig":"12"},{"size":1213,"mtime":1612528782535,"results":"19","hashOfConfig":"12"},{"size":751,"mtime":1612520789975,"results":"20","hashOfConfig":"12"},{"size":719,"mtime":1612520822402,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"15fs34u",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\App.js",["43"],"C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\components\\Comments\\Comments.jsx",["44"],"import React from \"react\";\r\nimport { Container, ListGroup, Alert, Badge, Form, Col, Row, Spinner, Button } from \"react-bootstrap\"\r\nimport { BsTrash } from 'react-icons/bs';\r\nimport './Comment.css';\r\n\r\nclass Comments extends React.Component {\r\n \r\n    \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        comment: {\r\n            comment: \"\",\r\n            rate: 1,\r\n            elementId: this.props.match.params.songId,\r\n        },  \r\n        comments: null,\r\n       props: this.props,\r\n    }\r\n\r\n}\r\n \r\n updateCommentField = (e) => {\r\n    \r\n    let comment = { ...this.state.comment } \r\n    let currentId = e.currentTarget.id \r\n    comment[currentId] = e.currentTarget.value\r\n    this.setState({ comment: comment })     \r\n }\r\n\r\n submitComment = async (e) => {\r\n     e.preventDefault();\r\n     try {\r\n         let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/',\r\n             {\r\n                 method: 'POST',\r\n                 body: JSON.stringify(this.state.comment),\r\n                 headers: new Headers\r\n                     ({\r\n                     \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMxMTBmYzQxZDVhYTAwMTcwNzgyYTYiLCJpYXQiOjE2MDY0ODgzMTYsImV4cCI6MTYwNzY5NzkxNn0.JKDZcMVNN9Efg-41MSuOZHwMxvVga6Dr6IAKZl0M-eQ\"\r\n                    })\r\n             })\r\n         if (response.ok) {\r\n             alert('Comment added!')\r\n             this.fetchComment()\r\n             this.setState({\r\n                comment: {\r\n                    elementId: '',\r\n                    rate: 1,\r\n                    comment: '',\r\n               }\r\n             })\r\n         } else {\r\n             console.log('please check again')\r\n             console.log(this.state.comment);\r\n         }\r\n     } catch (e) {\r\n         console.log(e)\r\n     }\r\n }\r\n\r\n  componentDidMount = async () => {\r\n    this.fetchComment();\r\n  }\r\n  fetchComment = async () => {\r\n    const idFromTheSearchBar = this.props.match.params.songId;\r\n\r\n    try {\r\n      let response = await fetch(\"https://striveschool-api.herokuapp.com/api/comments/\" + idFromTheSearchBar,\r\n        {\r\n          headers: new Headers({\r\n            \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMxMTBmYzQxZDVhYTAwMTcwNzgyYTYiLCJpYXQiOjE2MDY0ODgzMTYsImV4cCI6MTYwNzY5NzkxNn0.JKDZcMVNN9Efg-41MSuOZHwMxvVga6Dr6IAKZl0M-eQ\",\r\n          }),\r\n        });\r\n      if (response.ok) {\r\n        let fetchedcomments = await response.json()\r\n        this.setState({\r\n          comments: fetchedcomments\r\n        })\r\n      } else {\r\n        console.log(\"error during fetch\")\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  onDelete = async (id) => {\r\n    const url= \"https://striveschool-api.herokuapp.com/api/comments/\"\r\n    console.log(id);\r\n    const res = await fetch( url + id, {\r\n      headers: new Headers({\r\n        \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMxMTBmYzQxZDVhYTAwMTcwNzgyYTYiLCJpYXQiOjE2MDY0ODgzMTYsImV4cCI6MTYwNzY5NzkxNn0.JKDZcMVNN9Efg-41MSuOZHwMxvVga6Dr6IAKZl0M-eQ\",\r\n      }),\r\n      method: \"DELETE\",\r\n    })\r\n    if (res.ok) {\r\n      console.log(\"deleted\");\r\n      this.fetchComment();\r\n    }\r\n  }\r\n\r\n\r\n  render(props) {\r\nconsole.log(\"props\", this.state.props)\r\n    return (\r\n        <Container>\r\n      <Container className=\"ml-5 p-5\">\r\n          <Form onSubmit={this.submitComment} >\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"rate\" className=\"text-white\">\r\n                                Rate\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"rate\"\r\n                                id=\"rate\"\r\n                                value={this.state.comment.rate}\r\n                                onChange={this.updateCommentField}\r\n                            >\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                    <Form.Group>\r\n                            <Form.Label htmlFor=\"comment\"  className=\"text-white\">\r\n                                Comment\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"comment\"\r\n                                id=\"comment\"\r\n                                placeholder=\"Your comment\" \r\n                                required\r\n                                value={this.state.comment.comment}\r\n                                onChange={this.updateCommentField}\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Button type=\"submit\" className=\"buttonModal\">Submit</Button>\r\n            </Form>\r\n        {this.state.comments ? (\r\n          <ListGroup className=\"mt-5 mb-5\">\r\n            {this.state.comments.map((comment, index) => {\r\n              let variant = \"\";\r\n              switch (comment.rate) {\r\n                case 1:\r\n                  variant = \"danger\";\r\n                  break;\r\n                case 2:\r\n                  variant = \"warning\";\r\n                  break;\r\n                case 3:\r\n                  variant = \"secondary\";\r\n                  break;\r\n                default:\r\n                  variant = \"success\";\r\n                  break;\r\n              }\r\n\r\n              return (\r\n\r\n                <ListGroup.Item key={`list-item-${index}`} className=\"list-item \" style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <div> {comment.author}: {comment.comment} {\" \"}\r\n                    <Badge pill variant={variant} className=\"ml-3\">\r\n                      {comment.rate}\r\n                    </Badge>\r\n                  </div>\r\n                  <Button variant=\"danger\" className=\"deleteComment ml-3\" onClick={() => this.onDelete(comment._id)}><BsTrash /></Button>\r\n                </ListGroup.Item>\r\n\r\n              );\r\n            })}\r\n          </ListGroup>\r\n        ) : (\r\n              <Alert variant=\"danger\" className=\"mt-5 \">\r\n                No comments here\r\n            </Alert>\r\n          )}\r\n      </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments\r\n","C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\components\\Home\\Song.jsx",["45","46"],"C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\index.js",[],"C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\components\\Home\\Home.jsx",["47","48","49","50","51"],"C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\reportWebVitals.js",[],"C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\reducers\\loadingReducer.js",["52"],"C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\components\\Home\\Gallery.jsx",["53","54"],"C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\store\\index.js",[],"C:\\Users\\Dell\\Desktop\\M7-D5-Team\\SpotifyCloneReact\\src\\reducers\\songsReducer.js",["55"],{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":2,"column":62,"nodeType":"58","messageId":"59","endLine":2,"endColumn":69},{"ruleId":"56","severity":1,"message":"61","line":2,"column":15,"nodeType":"58","messageId":"59","endLine":2,"endColumn":20},{"ruleId":"62","severity":1,"message":"63","line":11,"column":5,"nodeType":"64","endLine":11,"endColumn":56},{"ruleId":"65","severity":1,"message":"66","line":145,"column":23,"nodeType":"64","endLine":145,"endColumn":35},{"ruleId":"65","severity":1,"message":"66","line":149,"column":23,"nodeType":"64","endLine":149,"endColumn":35},{"ruleId":"65","severity":1,"message":"66","line":153,"column":23,"nodeType":"64","endLine":153,"endColumn":35},{"ruleId":"65","severity":1,"message":"66","line":157,"column":23,"nodeType":"64","endLine":157,"endColumn":35},{"ruleId":"65","severity":1,"message":"66","line":161,"column":23,"nodeType":"64","endLine":161,"endColumn":35},{"ruleId":"67","severity":1,"message":"68","line":1,"column":1,"nodeType":"69","endLine":16,"endColumn":4},{"ruleId":"56","severity":1,"message":"70","line":2,"column":15,"nodeType":"58","messageId":"59","endLine":2,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":2,"column":20,"nodeType":"58","messageId":"59","endLine":2,"endColumn":27},{"ruleId":"67","severity":1,"message":"68","line":1,"column":1,"nodeType":"69","endLine":24,"endColumn":4},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Col' is defined but never used."]