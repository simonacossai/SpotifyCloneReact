[{"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\store\\store.js":"1","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\index.js":"2","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Detail\\AlbumPage.jsx":"3","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Comments\\Comments.jsx":"4","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\ArtistPage\\ArtistPage.jsx":"5","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Player\\Player.jsx":"6","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\App.js":"7","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Sidebar\\Sidebar.jsx":"8","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Home\\Gallery.jsx":"9"},{"size":756,"mtime":1612535318830,"results":"10","hashOfConfig":"11"},{"size":517,"mtime":1612517444456,"results":"12","hashOfConfig":"11"},{"size":5053,"mtime":1612539279771,"results":"13","hashOfConfig":"11"},{"size":6807,"mtime":1612517444435,"results":"14","hashOfConfig":"11"},{"size":3206,"mtime":1612530986602,"results":"15","hashOfConfig":"11"},{"size":8626,"mtime":1612517444450,"results":"16","hashOfConfig":"11"},{"size":1239,"mtime":1612538796824,"results":"17","hashOfConfig":"11"},{"size":7560,"mtime":1612517444454,"results":"18","hashOfConfig":"11"},{"size":795,"mtime":1612517444444,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tyxail",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\store\\store.js",[],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\index.js",[],["43","44"],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Detail\\AlbumPage.jsx",["45","46","47","48","49","50","51"],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Comments\\Comments.jsx",["52"],"import React from \"react\";\r\nimport { Container, ListGroup, Alert, Badge, Form, Col, Row, Spinner, Button } from \"react-bootstrap\"\r\nimport { BsTrash } from 'react-icons/bs';\r\nimport './Comment.css';\r\n\r\nclass Comments extends React.Component {\r\n \r\n    \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        comment: {\r\n            comment: \"\",\r\n            rate: 1,\r\n            elementId: this.props.match.params.songId,\r\n        },  \r\n        comments: null,\r\n       props: this.props,\r\n    }\r\n\r\n}\r\n \r\n updateCommentField = (e) => {\r\n    \r\n    let comment = { ...this.state.comment } \r\n    let currentId = e.currentTarget.id \r\n    comment[currentId] = e.currentTarget.value\r\n    this.setState({ comment: comment })     \r\n }\r\n\r\n submitComment = async (e) => {\r\n     e.preventDefault();\r\n     try {\r\n         let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/',\r\n             {\r\n                 method: 'POST',\r\n                 body: JSON.stringify(this.state.comment),\r\n                 headers: new Headers\r\n                     ({\r\n                     \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMxMTBmYzQxZDVhYTAwMTcwNzgyYTYiLCJpYXQiOjE2MDY0ODgzMTYsImV4cCI6MTYwNzY5NzkxNn0.JKDZcMVNN9Efg-41MSuOZHwMxvVga6Dr6IAKZl0M-eQ\"\r\n                    })\r\n             })\r\n         if (response.ok) {\r\n             alert('Comment added!')\r\n             this.fetchComment()\r\n             this.setState({\r\n                comment: {\r\n                    elementId: '',\r\n                    rate: 1,\r\n                    comment: '',\r\n               }\r\n             })\r\n         } else {\r\n             console.log('please check again')\r\n             console.log(this.state.comment);\r\n         }\r\n     } catch (e) {\r\n         console.log(e)\r\n     }\r\n }\r\n\r\n  componentDidMount = async () => {\r\n    this.fetchComment();\r\n  }\r\n  fetchComment = async () => {\r\n    const idFromTheSearchBar = this.props.match.params.songId;\r\n\r\n    try {\r\n      let response = await fetch(\"https://striveschool-api.herokuapp.com/api/comments/\" + idFromTheSearchBar,\r\n        {\r\n          headers: new Headers({\r\n            \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMxMTBmYzQxZDVhYTAwMTcwNzgyYTYiLCJpYXQiOjE2MDY0ODgzMTYsImV4cCI6MTYwNzY5NzkxNn0.JKDZcMVNN9Efg-41MSuOZHwMxvVga6Dr6IAKZl0M-eQ\",\r\n          }),\r\n        });\r\n      if (response.ok) {\r\n        let fetchedcomments = await response.json()\r\n        this.setState({\r\n          comments: fetchedcomments\r\n        })\r\n      } else {\r\n        console.log(\"error during fetch\")\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  onDelete = async (id) => {\r\n    const url= \"https://striveschool-api.herokuapp.com/api/comments/\"\r\n    console.log(id);\r\n    const res = await fetch( url + id, {\r\n      headers: new Headers({\r\n        \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMxMTBmYzQxZDVhYTAwMTcwNzgyYTYiLCJpYXQiOjE2MDY0ODgzMTYsImV4cCI6MTYwNzY5NzkxNn0.JKDZcMVNN9Efg-41MSuOZHwMxvVga6Dr6IAKZl0M-eQ\",\r\n      }),\r\n      method: \"DELETE\",\r\n    })\r\n    if (res.ok) {\r\n      console.log(\"deleted\");\r\n      this.fetchComment();\r\n    }\r\n  }\r\n\r\n\r\n  render(props) {\r\nconsole.log(\"props\", this.state.props)\r\n    return (\r\n        <Container>\r\n      <Container className=\"ml-5 p-5\">\r\n          <Form onSubmit={this.submitComment} >\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"rate\" className=\"text-white\">\r\n                                Rate\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"rate\"\r\n                                id=\"rate\"\r\n                                value={this.state.comment.rate}\r\n                                onChange={this.updateCommentField}\r\n                            >\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                    <Form.Group>\r\n                            <Form.Label htmlFor=\"comment\"  className=\"text-white\">\r\n                                Comment\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"comment\"\r\n                                id=\"comment\"\r\n                                placeholder=\"Your comment\" \r\n                                required\r\n                                value={this.state.comment.comment}\r\n                                onChange={this.updateCommentField}\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Button type=\"submit\" className=\"buttonModal\">Submit</Button>\r\n            </Form>\r\n        {this.state.comments ? (\r\n          <ListGroup className=\"mt-5 mb-5\">\r\n            {this.state.comments.map((comment, index) => {\r\n              let variant = \"\";\r\n              switch (comment.rate) {\r\n                case 1:\r\n                  variant = \"danger\";\r\n                  break;\r\n                case 2:\r\n                  variant = \"warning\";\r\n                  break;\r\n                case 3:\r\n                  variant = \"secondary\";\r\n                  break;\r\n                default:\r\n                  variant = \"success\";\r\n                  break;\r\n              }\r\n\r\n              return (\r\n\r\n                <ListGroup.Item key={`list-item-${index}`} className=\"list-item \" style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <div> {comment.author}: {comment.comment} {\" \"}\r\n                    <Badge pill variant={variant} className=\"ml-3\">\r\n                      {comment.rate}\r\n                    </Badge>\r\n                  </div>\r\n                  <Button variant=\"danger\" className=\"deleteComment ml-3\" onClick={() => this.onDelete(comment._id)}><BsTrash /></Button>\r\n                </ListGroup.Item>\r\n\r\n              );\r\n            })}\r\n          </ListGroup>\r\n        ) : (\r\n              <Alert variant=\"danger\" className=\"mt-5 \">\r\n                No comments here\r\n            </Alert>\r\n          )}\r\n      </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments\r\n","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\ArtistPage\\ArtistPage.jsx",["53","54","55","56"],"import React, { Component } from \"react\";\r\nimport \"./ArtistPage.css\";\r\nimport Gallery from \"../Home/Gallery\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\nconst mapStateToProps = (state) => state;\r\nclass ArtistPage extends Component {\r\n  state = {\r\n    beatlesSongs: [],\r\n    loading: true,\r\n    error: false,\r\n  };\r\n\r\n  url = \"https://deezerdevs-deezer.p.rapidapi.com/search?q=\";\r\n\r\n  fetchsongs = () => {\r\n    fetch(this.url + \"beatles\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-key\": \"ec5577de62msh9d203d454724b43p1f3c08jsnad1a59a31f6f\",\r\n        \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseObject) => {\r\n        this.setState({ beatlesSongs: responseObject.data }, () =>\r\n          console.log(this.state.beatlesSongs)\r\n        );\r\n      })\r\n      .then(() => this.setState({ loading: false }))\r\n      .catch((err) => {\r\n        this.setState({ error: true });\r\n        console.log(\"An error has occurred:\", err);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchsongs();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid mb-5\">\r\n          <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container text-center jumbotron-text\">\r\n              <p className=\"text-center p-0 m-0 listeners\">\r\n                33,000,676 MONTHLY LISTENERS\r\n              </p>\r\n              <h1 className=\"display-4 text-center queen mt-0 mb-4\">Beatles</h1>\r\n              <span className=\"lead text-center mx-auto\">\r\n                <button className=\"mr-2\" id=\"play\">\r\n                  PLAY\r\n                </button>\r\n                <button className=\"follow mr-3\">FOLLOW</button>\r\n                <svg\r\n                  width=\"1em\"\r\n                  className=\"dots\"\r\n                  height=\"1em\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  fill=\"currentColor\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\"\r\n                  />\r\n                </svg>\r\n              </span>\r\n            </div>\r\n            <nav aria-label=\"breadcrumb\" className=\"breadcrumb-nav\">\r\n              <ol className=\"breadcrumb\">\r\n                <li className=\"breadcrumb-item\">\r\n                  <a href=\"#\">OVERVIEW</a>\r\n                </li>\r\n                <li className=\"breadcrumb-item\">\r\n                  <a href=\"#\">RELATED ARTIST</a>\r\n                </li>\r\n                <li className=\"breadcrumb-item\">\r\n                  <a href=\"#\">ABOUT</a>\r\n                </li>\r\n              </ol>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n        <Gallery\r\n          className=\"mt-4\"\r\n          title=\"The best of Beatles\"\r\n          loading={this.state.loading}\r\n          songs={this.state.beatlesSongs}\r\n          props={this.props}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(ArtistPage);\r\n","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Player\\Player.jsx",["57"],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\App.js",["58"],"import logo from './logo.svg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport Player from './components/Player/Player';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport Home from './components/Home/Home';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport AlbumPage from './components/Detail/AlbumPage'\r\nimport ArtistPage from './components/ArtistPage/ArtistPage';\r\nimport Comments from './components/Comments/Comments';\r\nimport { Provider } from 'react-redux'\r\nimport {store}  from './store/store'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <Provider store={store}>\r\n      <Sidebar/>\r\n      <Route\r\n       path=\"/\"\r\n       exact\r\n       render={(props ) => <Home {...props} />} />\r\n       <Route\r\n      path=\"/AlbumPage/:id\"\r\n      render={(\r\n      props \r\n      ) => <AlbumPage {...props} />} \r\n      />\r\n      <Route\r\n      path=\"/ArtistPage\"\r\n      exact\r\n      render={(\r\n      props \r\n      ) => <ArtistPage {...props} />} \r\n      />\r\n      \r\n       <Route\r\n      path=\"/Comments/:songId\"\r\n      render={(\r\n      props \r\n      ) => <Comments {...props} />} \r\n      />\r\n      <Player />\r\n    </Provider>\r\n      </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["59","60"],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Sidebar\\Sidebar.jsx",["61","62","63","64","65","66","67","68"],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Home\\Gallery.jsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":3,"column":3,"nodeType":"75","messageId":"76","endLine":3,"endColumn":8},{"ruleId":"73","severity":1,"message":"77","line":4,"column":3,"nodeType":"75","messageId":"76","endLine":4,"endColumn":7},{"ruleId":"73","severity":1,"message":"78","line":5,"column":3,"nodeType":"75","messageId":"76","endLine":5,"endColumn":6},{"ruleId":"73","severity":1,"message":"79","line":6,"column":3,"nodeType":"75","messageId":"76","endLine":6,"endColumn":12},{"ruleId":"73","severity":1,"message":"80","line":7,"column":3,"nodeType":"75","messageId":"76","endLine":7,"endColumn":6},{"ruleId":"73","severity":1,"message":"81","line":8,"column":3,"nodeType":"75","messageId":"76","endLine":8,"endColumn":10},{"ruleId":"82","severity":1,"message":"83","line":106,"column":17,"nodeType":"84","endLine":110,"endColumn":19},{"ruleId":"73","severity":1,"message":"81","line":2,"column":62,"nodeType":"75","messageId":"76","endLine":2,"endColumn":69},{"ruleId":"73","severity":1,"message":"85","line":4,"column":10,"nodeType":"75","messageId":"76","endLine":4,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":74,"column":19,"nodeType":"84","endLine":74,"endColumn":31},{"ruleId":"86","severity":1,"message":"87","line":77,"column":19,"nodeType":"84","endLine":77,"endColumn":31},{"ruleId":"86","severity":1,"message":"87","line":80,"column":19,"nodeType":"84","endLine":80,"endColumn":31},{"ruleId":"82","severity":1,"message":"83","line":13,"column":11,"nodeType":"84","endLine":13,"endColumn":64},{"ruleId":"73","severity":1,"message":"88","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":12},{"ruleId":"69","replacedBy":"89"},{"ruleId":"71","replacedBy":"90"},{"ruleId":"86","severity":1,"message":"87","line":13,"column":21,"nodeType":"84","endLine":13,"endColumn":63},{"ruleId":"82","severity":1,"message":"83","line":13,"column":63,"nodeType":"84","endLine":13,"endColumn":104},{"ruleId":"91","severity":1,"message":"92","line":25,"column":37,"nodeType":"93","endLine":25,"endColumn":65},{"ruleId":"86","severity":1,"message":"94","line":39,"column":33,"nodeType":"84","endLine":39,"endColumn":57},{"ruleId":"91","severity":1,"message":"92","line":44,"column":37,"nodeType":"93","endLine":44,"endColumn":61},{"ruleId":"86","severity":1,"message":"94","line":60,"column":33,"nodeType":"84","endLine":60,"endColumn":57},{"ruleId":"86","severity":1,"message":"87","line":89,"column":37,"nodeType":"84","endLine":89,"endColumn":77},{"ruleId":"86","severity":1,"message":"87","line":96,"column":37,"nodeType":"84","endLine":96,"endColumn":106},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Spinner' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'logo' is defined but never used.",["95"],["96"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]