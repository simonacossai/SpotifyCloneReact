[{"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\App.js":"1","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Detail\\AlbumPage.jsx":"2","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Home\\Song.jsx":"3","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\ArtistPage\\ArtistPage.jsx":"4","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\index.js":"5","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Comments\\Comments.jsx":"6","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Sidebar\\Sidebar.jsx":"7","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Home\\Home.jsx":"8","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\reportWebVitals.js":"9","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\reducers\\errors.js":"10","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Home\\Gallery.jsx":"11","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Player\\Player.jsx":"12","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\store\\store.js":"13"},{"size":1237,"mtime":1612526713911,"results":"14","hashOfConfig":"15"},{"size":3883,"mtime":1612517444440,"results":"16","hashOfConfig":"15"},{"size":969,"mtime":1612517444446,"results":"17","hashOfConfig":"15"},{"size":3206,"mtime":1612530986602,"results":"18","hashOfConfig":"15"},{"size":517,"mtime":1612517444456,"results":"19","hashOfConfig":"15"},{"size":6807,"mtime":1612517444435,"results":"20","hashOfConfig":"15"},{"size":7560,"mtime":1612517444454,"results":"21","hashOfConfig":"15"},{"size":4173,"mtime":1612517444445,"results":"22","hashOfConfig":"15"},{"size":375,"mtime":1612517444459,"results":"23","hashOfConfig":"15"},{"size":514,"mtime":1612523052648,"results":"24","hashOfConfig":"15"},{"size":795,"mtime":1612517444444,"results":"25","hashOfConfig":"15"},{"size":8626,"mtime":1612517444450,"results":"26","hashOfConfig":"15"},{"size":540,"mtime":1612521269934,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"1tyxail",{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\App.js",["58"],"import logo from './logo.svg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport Player from './components/Player/Player';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport Home from './components/Home/Home';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport AlbumPage from './components/Detail/AlbumPage'\r\nimport ArtistPage from './components/ArtistPage/ArtistPage';\r\nimport Comments from './components/Comments/Comments';\r\nimport { Provider } from 'react-redux'\r\nimport store  from './store/store'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <Provider store={store}>\r\n      <Sidebar/>\r\n      <Route\r\n       path=\"/\"\r\n       exact\r\n       render={(props ) => <Home {...props} />} />\r\n       <Route\r\n      path=\"/AlbumPage/:id\"\r\n      render={(\r\n      props \r\n      ) => <AlbumPage {...props} />} \r\n      />\r\n      <Route\r\n      path=\"/ArtistPage\"\r\n      exact\r\n      render={(\r\n      props \r\n      ) => <ArtistPage {...props} />} \r\n      />\r\n      \r\n       <Route\r\n      path=\"/Comments/:songId\"\r\n      render={(\r\n      props \r\n      ) => <Comments {...props} />} \r\n      />\r\n      <Player />\r\n    </Provider>\r\n      </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Detail\\AlbumPage.jsx",["59","60","61","62","63","64","65"],"import React from 'react'\r\nimport { Badge, Card, Col, Container, Row, Spinner, ListGroupItem, ListGroup } from 'react-bootstrap'\r\nimport './AlbumPage.css';\r\nimport {BsMusicNote} from 'react-icons/bs';\r\n\r\nclass AlbumPage extends React.Component {\r\n    state = {\r\n        songs: null,\r\n        props: this.props\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        const albumIdFromTheSearchBar = this.props.match.params.id;\r\n\r\n        try {\r\n            let response = await fetch(\"https://deezerdevs-deezer.p.rapidapi.com/album/\"+ albumIdFromTheSearchBar,\r\n                {\r\n                    \"method\": \"GET\",\r\n                    \"headers\": {\r\n                        \"x-rapidapi-key\": \"ec5577de62msh9d203d454724b43p1f3c08jsnad1a59a31f6f\",\r\n                        \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\"\r\n                    }\r\n                })\r\n            if (response.ok) {\r\n                let song = await response.json()\r\n                this.setState({\r\n                    songs: song\r\n                })\r\n                console.log(\"state\", this.state.songs)\r\n            } else {\r\n                console.log(\"error during fetch\")\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    render(props) {\r\n        console.log(\"props\", this.state.props)\r\n\r\n        return (\r\n\r\n            <div className=\"container mt-5 middleRow\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4 col-md-12 col-sm-12 coverWrapper mt-3\">\r\n                        <div className=\"row\">\r\n                            {this.state.songs &&\r\n                                <img\r\n                                    src={this.state.songs.cover_big}\r\n                                    className=\"albumCoverImg\"\r\n                                    style={{ width: \"300px\" }}\r\n                                />\r\n                            }\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {this.state.songs && <h6 className=\"albumName\">{this.state.songs.title}</h6>}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {this.state.songs && <h6 className=\"artist\">{this.state.songs.artist.name}</h6>}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <button type=\"button\" className=\"btn btn-lg mt-3 mb-1\">Play</button>\r\n                        </div>\r\n                        <div className=\"row my-2\">\r\n                            {this.state.songs && <h6 className=\"artist\">2018 - {this.state.songs.nb_tracks} songs</h6>}\r\n                        </div>\r\n                        <div className=\"row mt-2\">\r\n                            <i\r\n                                className=\"far fa-heart mr-3\"\r\n                                style={{ width: \"25px\" }}\r\n                            ></i>\r\n                            <i className=\"fas fa-ellipsis-h\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6 col-md-12 col-sm-12 text-center\" id=\"songs\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                        <ListGroup className=\"listgroup\">\r\n\r\n                            {this.state.songs && this.state.songs.tracks.data.map((song) => <ListGroupItem className=\"SongList\">\r\n                              <span className=\"text-left text-white\">  <BsMusicNote className=\"mr-2\"/>{song.title_short}</span>\r\n                                <span className=\"text-right text-white\">{((song.duration % 60) / 10).toFixed(2)}</span>\r\n                            </ListGroupItem>)}\r\n\r\n                        </ListGroup>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default AlbumPage\r\n\r\n",["66","67"],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Home\\Song.jsx",[],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\ArtistPage\\ArtistPage.jsx",["68","69","70","71"],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\index.js",[],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Comments\\Comments.jsx",["72"],"import React from \"react\";\r\nimport { Container, ListGroup, Alert, Badge, Form, Col, Row, Spinner, Button } from \"react-bootstrap\"\r\nimport { BsTrash } from 'react-icons/bs';\r\nimport './Comment.css';\r\n\r\nclass Comments extends React.Component {\r\n \r\n    \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        comment: {\r\n            comment: \"\",\r\n            rate: 1,\r\n            elementId: this.props.match.params.songId,\r\n        },  \r\n        comments: null,\r\n       props: this.props,\r\n    }\r\n\r\n}\r\n \r\n updateCommentField = (e) => {\r\n    \r\n    let comment = { ...this.state.comment } \r\n    let currentId = e.currentTarget.id \r\n    comment[currentId] = e.currentTarget.value\r\n    this.setState({ comment: comment })     \r\n }\r\n\r\n submitComment = async (e) => {\r\n     e.preventDefault();\r\n     try {\r\n         let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/',\r\n             {\r\n                 method: 'POST',\r\n                 body: JSON.stringify(this.state.comment),\r\n                 headers: new Headers\r\n                     ({\r\n                     \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMxMTBmYzQxZDVhYTAwMTcwNzgyYTYiLCJpYXQiOjE2MDY0ODgzMTYsImV4cCI6MTYwNzY5NzkxNn0.JKDZcMVNN9Efg-41MSuOZHwMxvVga6Dr6IAKZl0M-eQ\"\r\n                    })\r\n             })\r\n         if (response.ok) {\r\n             alert('Comment added!')\r\n             this.fetchComment()\r\n             this.setState({\r\n                comment: {\r\n                    elementId: '',\r\n                    rate: 1,\r\n                    comment: '',\r\n               }\r\n             })\r\n         } else {\r\n             console.log('please check again')\r\n             console.log(this.state.comment);\r\n         }\r\n     } catch (e) {\r\n         console.log(e)\r\n     }\r\n }\r\n\r\n  componentDidMount = async () => {\r\n    this.fetchComment();\r\n  }\r\n  fetchComment = async () => {\r\n    const idFromTheSearchBar = this.props.match.params.songId;\r\n\r\n    try {\r\n      let response = await fetch(\"https://striveschool-api.herokuapp.com/api/comments/\" + idFromTheSearchBar,\r\n        {\r\n          headers: new Headers({\r\n            \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMxMTBmYzQxZDVhYTAwMTcwNzgyYTYiLCJpYXQiOjE2MDY0ODgzMTYsImV4cCI6MTYwNzY5NzkxNn0.JKDZcMVNN9Efg-41MSuOZHwMxvVga6Dr6IAKZl0M-eQ\",\r\n          }),\r\n        });\r\n      if (response.ok) {\r\n        let fetchedcomments = await response.json()\r\n        this.setState({\r\n          comments: fetchedcomments\r\n        })\r\n      } else {\r\n        console.log(\"error during fetch\")\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  onDelete = async (id) => {\r\n    const url= \"https://striveschool-api.herokuapp.com/api/comments/\"\r\n    console.log(id);\r\n    const res = await fetch( url + id, {\r\n      headers: new Headers({\r\n        \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMxMTBmYzQxZDVhYTAwMTcwNzgyYTYiLCJpYXQiOjE2MDY0ODgzMTYsImV4cCI6MTYwNzY5NzkxNn0.JKDZcMVNN9Efg-41MSuOZHwMxvVga6Dr6IAKZl0M-eQ\",\r\n      }),\r\n      method: \"DELETE\",\r\n    })\r\n    if (res.ok) {\r\n      console.log(\"deleted\");\r\n      this.fetchComment();\r\n    }\r\n  }\r\n\r\n\r\n  render(props) {\r\nconsole.log(\"props\", this.state.props)\r\n    return (\r\n        <Container>\r\n      <Container className=\"ml-5 p-5\">\r\n          <Form onSubmit={this.submitComment} >\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Form.Group>\r\n                            <Form.Label htmlFor=\"rate\" className=\"text-white\">\r\n                                Rate\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"rate\"\r\n                                id=\"rate\"\r\n                                value={this.state.comment.rate}\r\n                                onChange={this.updateCommentField}\r\n                            >\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                    <Form.Group>\r\n                            <Form.Label htmlFor=\"comment\"  className=\"text-white\">\r\n                                Comment\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"comment\"\r\n                                id=\"comment\"\r\n                                placeholder=\"Your comment\" \r\n                                required\r\n                                value={this.state.comment.comment}\r\n                                onChange={this.updateCommentField}\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Button type=\"submit\" className=\"buttonModal\">Submit</Button>\r\n            </Form>\r\n        {this.state.comments ? (\r\n          <ListGroup className=\"mt-5 mb-5\">\r\n            {this.state.comments.map((comment, index) => {\r\n              let variant = \"\";\r\n              switch (comment.rate) {\r\n                case 1:\r\n                  variant = \"danger\";\r\n                  break;\r\n                case 2:\r\n                  variant = \"warning\";\r\n                  break;\r\n                case 3:\r\n                  variant = \"secondary\";\r\n                  break;\r\n                default:\r\n                  variant = \"success\";\r\n                  break;\r\n              }\r\n\r\n              return (\r\n\r\n                <ListGroup.Item key={`list-item-${index}`} className=\"list-item \" style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <div> {comment.author}: {comment.comment} {\" \"}\r\n                    <Badge pill variant={variant} className=\"ml-3\">\r\n                      {comment.rate}\r\n                    </Badge>\r\n                  </div>\r\n                  <Button variant=\"danger\" className=\"deleteComment ml-3\" onClick={() => this.onDelete(comment._id)}><BsTrash /></Button>\r\n                </ListGroup.Item>\r\n\r\n              );\r\n            })}\r\n          </ListGroup>\r\n        ) : (\r\n              <Alert variant=\"danger\" className=\"mt-5 \">\r\n                No comments here\r\n            </Alert>\r\n          )}\r\n      </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments\r\n","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Sidebar\\Sidebar.jsx",["73","74","75","76","77","78","79","80"],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Home\\Home.jsx",["81","82","83","84","85"],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\reportWebVitals.js",[],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\reducers\\errors.js",[],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Home\\Gallery.jsx",[],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\components\\Player\\Player.jsx",["86"],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\SpotifyCloneReact\\src\\store\\store.js",[],{"ruleId":"87","severity":1,"message":"88","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":12},{"ruleId":"87","severity":1,"message":"91","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":15},{"ruleId":"87","severity":1,"message":"92","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":21},{"ruleId":"87","severity":1,"message":"93","line":2,"column":23,"nodeType":"89","messageId":"90","endLine":2,"endColumn":26},{"ruleId":"87","severity":1,"message":"94","line":2,"column":28,"nodeType":"89","messageId":"90","endLine":2,"endColumn":37},{"ruleId":"87","severity":1,"message":"95","line":2,"column":39,"nodeType":"89","messageId":"90","endLine":2,"endColumn":42},{"ruleId":"87","severity":1,"message":"96","line":2,"column":44,"nodeType":"89","messageId":"90","endLine":2,"endColumn":51},{"ruleId":"97","severity":1,"message":"98","line":49,"column":33,"nodeType":"99","endLine":53,"endColumn":35},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"87","severity":1,"message":"104","line":4,"column":10,"nodeType":"89","messageId":"90","endLine":4,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":74,"column":19,"nodeType":"99","endLine":74,"endColumn":31},{"ruleId":"105","severity":1,"message":"106","line":77,"column":19,"nodeType":"99","endLine":77,"endColumn":31},{"ruleId":"105","severity":1,"message":"106","line":80,"column":19,"nodeType":"99","endLine":80,"endColumn":31},{"ruleId":"87","severity":1,"message":"96","line":2,"column":62,"nodeType":"89","messageId":"90","endLine":2,"endColumn":69},{"ruleId":"105","severity":1,"message":"106","line":13,"column":21,"nodeType":"99","endLine":13,"endColumn":63},{"ruleId":"97","severity":1,"message":"98","line":13,"column":63,"nodeType":"99","endLine":13,"endColumn":104},{"ruleId":"107","severity":1,"message":"108","line":25,"column":37,"nodeType":"109","endLine":25,"endColumn":65},{"ruleId":"105","severity":1,"message":"110","line":39,"column":33,"nodeType":"99","endLine":39,"endColumn":57},{"ruleId":"107","severity":1,"message":"108","line":44,"column":37,"nodeType":"109","endLine":44,"endColumn":61},{"ruleId":"105","severity":1,"message":"110","line":60,"column":33,"nodeType":"99","endLine":60,"endColumn":57},{"ruleId":"105","severity":1,"message":"106","line":89,"column":37,"nodeType":"99","endLine":89,"endColumn":77},{"ruleId":"105","severity":1,"message":"106","line":96,"column":37,"nodeType":"99","endLine":96,"endColumn":106},{"ruleId":"105","severity":1,"message":"106","line":87,"column":13,"nodeType":"99","endLine":87,"endColumn":25},{"ruleId":"105","severity":1,"message":"106","line":91,"column":13,"nodeType":"99","endLine":91,"endColumn":25},{"ruleId":"105","severity":1,"message":"106","line":95,"column":13,"nodeType":"99","endLine":95,"endColumn":25},{"ruleId":"105","severity":1,"message":"106","line":99,"column":13,"nodeType":"99","endLine":99,"endColumn":25},{"ruleId":"105","severity":1,"message":"106","line":103,"column":13,"nodeType":"99","endLine":103,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":13,"column":11,"nodeType":"99","endLine":13,"endColumn":64},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Badge' is defined but never used.","'Card' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Spinner' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["111"],"no-negated-in-lhs",["112"],"'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]